{"version":3,"sources":["../../server/test/index.js"],"names":["expect","chai","use","chaiHttp","describe","it","done","request","app","get","end","err","res","body","to","be","an","haveOwnProperty","status","a","equals","data","faker","random","number","error","equal","post","send","location","address","longitude","latitude","comment","words","type","message","undefined","patch","delete"],"mappings":"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","file":"index.js","sourcesContent":["import chai from \"chai\";\r\nimport faker from \"faker\";\r\nimport chaiHttp from \"chai-http\";\r\nimport app from \"../App\";\r\nimport Controller from \"../controllers/controller\";\r\nconst { expect } = chai;\r\n\r\nchai.use(chaiHttp);\r\n\r\n\r\ndescribe(\"GET api/v1/Red flags\", () => {\r\n  it(\"should return all available Red flag records\", (done) => {\r\n    chai.request(app)\r\n      .get(\"/api/v1/Red flags\")\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body).to.haveOwnProperty(\"status\" && \"data\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"GET api/v1/Red flags/:id\", () => {\r\n  it(\"should return a Red flag record with a specific id\", (done) => {\r\n    chai.request(app)\r\n      .get(\"/api/v1/Red flags/2\")\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body).to.haveOwnProperty(\"status\" && \"data\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\" && \"comment\" && \"location\" && \"type\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"GET api/v1/Red flags/:id (id is non-existent)\", () => {\r\n  it(\"should return an error if a user attempts to make a request for an unexistent record id\", (done) => {\r\n    chai.request(app)\r\n      .get(`/api/v1/Red flags/${faker.random.number() + faker.random.number()}`)\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(404);\r\n        expect(body.error).to.be.equal(\"No record was found with the given id.\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"POST api/v1/Red flags\", () => {\r\n  it(\"should create a record if user input is valid\", (done) => {\r\n    chai.request(app)\r\n      .post(\"/api/v1/Red flags/\")\r\n      .send({\r\n        location: `${faker.address.longitude()}, ${faker.address.latitude()}`,\r\n        comment: `${faker.random.words()}`,\r\n        type: \"Red flag\",\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body).to.haveOwnProperty(\"data\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body.data[0]).to.be.an(\"object\");\r\n        expect(body.data[0].message).to.be.a(\"string\");\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\" && \"message\");\r\n        expect(body.data[0].message).to.be.equals(\"Created Red flag record\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"POST api/v1/Red flags\", () => {\r\n  it(\"should return an error if user input is invalid\", (done) => {\r\n    chai.request(app)\r\n      .post(\"/api/v1/Red flags/\")\r\n      .send({\r\n        location: undefined,\r\n        comment: undefined,\r\n        type: undefined,\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(400);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.error).to.be.equals(\"Please fill in the location and comment.\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/location\", () => {\r\n  it(\"should edit the location value of a record if it exists\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/1/location\")\r\n      .send({\r\n        location: \"543.3213, 423.242\",\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body).to.haveOwnProperty(\"data\");\r\n        expect(body.data[0]).to.haveOwnProperty(\"message\");\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\" && \"message\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/location\", () => {\r\n  it(\"should return an error if the record of that id is non-existent\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/non-existent-stuff/location\")\r\n      .send({\r\n        location: `${faker.address.longitude()}, ${faker.address.latitude()}`,\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(404);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.error).to.equals(\"No record was found with the given id.\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/location\", () => {\r\n  it(\"should return an error if the location field is empty\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/1/location\")\r\n      .send({\r\n        location: undefined,\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(400);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.error).to.be.equals(\"Location is required.\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/comment\", () => {\r\n  it(\"edit the comment value of a record if it exists\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/1/comment\")\r\n      .send({\r\n        comment: faker.random.words(),\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body).to.haveOwnProperty(\"data\");\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\" && \"message\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/comment\", () => {\r\n  it(\"should return an error if the id is not existing\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/non-existing-id/comment\")\r\n      .send({\r\n        comment: faker.random.words(),\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(404);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"PATCH api/v1/Red flags/:id/comment\", () => {\r\n  it(\"should return an error if the comment field is empty\", (done) => {\r\n    chai.request(app)\r\n      .patch(\"/api/v1/Red flags/1/comment\")\r\n      .send({\r\n        comment: undefined,\r\n      })\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(400);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.error).to.be.equals(\"Comment is required.\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"Delete api/v1/Red flags/:id/\", () => {\r\n  it(\"should delete a record by id if it exists\", (done) => {\r\n    chai.request(app)\r\n      .delete(\"/api/v1/Red flags/1/\")\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(200);\r\n        expect(body).to.haveOwnProperty(\"data\");\r\n        expect(body.data[0]).to.haveOwnProperty(\"id\" && \"message\");\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe(\"Delete api/v1/Red flags/:id/\", () => {\r\n  it(\"should delete a record by id if it doesn't exist\", (done) => {\r\n    chai.request(app)\r\n      .delete(\"/api/v1/Red flags/1/\")\r\n      .end((err, res) => {\r\n        if (err) done();\r\n        const { body } = res;\r\n        expect(body).to.be.an(\"object\");\r\n        expect(body.status).to.be.a(\"number\");\r\n        expect(body.status).to.be.equals(404);\r\n        expect(body).to.haveOwnProperty(\"error\");\r\n        expect(body.error).to.equals(\"No record was found with the given id.\");\r\n        done();\r\n      });\r\n  });\r\n});"]}