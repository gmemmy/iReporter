{"version":3,"sources":["../../server/controllers/controller.js"],"names":["Controller","req","res","redFlags","Incidents","filter","Incident","type","length","send","specificRecord","find","id","Number","params","recordComment","body","comment","recordLocation","location"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,U;;;;;;;;;AAIrB;;;;;;;;oCAQkBC,G,EAAKC,G,EAAK;AAC3B,OAAIC,WAAYC,sBAAUC,MAAV,CAAiB;AAAA,WAAYC,SAASC,IAAT,KAAkB,UAA9B;AAAA,IAAjB,CAAhB;AACA,OAAIJ,SAASK,MAAT,IAAmB,CAAvB,EAA0B;AACxBN,QAAIO,IAAJ,CAAS;AACR,eAAU,GADF;AAER,aAAQN;AAFA,KAAT;AAID,IALD,MAKO;AACLD,QAAIO,IAAJ,CAAS;AACP,eAAU,GADH;AAEP,cAAS;AAFF,KAAT;AAID;AACD;;;;;AAED;;;;;;;;sCAQoBR,G,EAAKC,G,EAAK;AAC7B,OAAMQ,iBAAiBN,sBAAUO,IAAV,CAAe;AAAA,WAAYL,SAASM,EAAT,KAAgBC,OAAOZ,IAAIa,MAAJ,CAAWF,EAAlB,CAA5B;AAAA,IAAf,CAAvB;AACA,OAAI,CAACF,cAAL,EAAqB;AACrBR,QAAIO,IAAJ,CAAS;AACR,eAAU,GADF;AAER,cAAS;AAFD,KAAT;AAIC,IALD,MAKO;AACNP,QAAIO,IAAJ,CAAS;AACR,eAAU,GADF;AAER,aAAQ,CAACC,cAAD;AAFA,KAAT;AAIA;AACD;;;;;AAGD;;;;;;;;gCAQcT,G,EAAKC,G,EAAM;AACxB,OAAMQ,iBAAiBN,sBAAUO,IAAV,CAAe;AAAA,WAAYL,SAASM,EAAT,KAAgBC,OAAOZ,IAAIa,MAAJ,CAAWF,EAAlB,CAA5B;AAAA,IAAf,CAAvB;AACA;AACA,OAAIF,cAAJ,EAAoB;AAAA,QACXK,aADW,GACOd,IAAIe,IADX,CACXD,aADW;;AAEnB,QAAIL,eAAeO,OAAf,GAAyBF,aAA7B,EAA4C;AAC5Cb,SAAIO,IAAJ,CAAS;AACR,gBAAU,GADF;AAER,cAAQ,CAAC;AACR,aAAMC,eAAeE,EADb;AAER,kBAAW;AAFH,OAAD;AAFA,MAAT;AAOA,KARA,MAQM;AACNV,SAAIO,IAAJ,CAAS;AACR,gBAAU,GADF;AAER,iBAAW;AAFH,MAAT;AAIA;AAAC;AACF;;AAED;;;;iCACgBR,G,EAAKC,G,EAAI;AACxB,OAAMQ,iBAAiBN,sBAAUO,IAAV,CAAe;AAAA,WAAYL,SAASM,EAAT,KAAgBC,OAAOZ,IAAIa,MAAJ,CAAWF,EAAlB,CAA5B;AAAA,IAAf,CAAvB;;AAEA,OAAIF,cAAJ,EAAoB;AAAA,QACXQ,cADW,GACQjB,IAAIe,IADZ,CACXE,cADW;;AAEnB,QAAGR,eAAeS,QAAf,GAA0BD,cAA7B,EAA6C;AAC5ChB,SAAIO,IAAJ,CAAS;AACR,gBAAU,GADF;AAER,cAAQ,CAAC;AACR,aAAMC,eAAeE,EADb;AAER,kBAAW;AAFH,OAAD;AAFA,MAAT;AAOA;AACD,IAXD,MAWO;AACNV,QAAIO,IAAJ,CAAS;AACR,eAAU,GADF;AAER,gBAAW;AAFH,KAAT;AAIA;AACD;;;;;;kBArGoBT,U","file":"controller.js","sourcesContent":["import Incidents from \"../model/flagRecords\";\r\n\r\nexport default class Controller {\r\n\r\n\r\n\r\n/***\r\n*\t@description  GET all red-flag records.\r\n*\t@param {object} req - HTTP Request\r\n* @param {object} res - HTTP Response\r\n* @memberof Controller\r\n* @returns {object} Class instance\r\n***/\r\n\r\nallredflagRecords(req, res) {\r\n\tlet redFlags =  Incidents.filter(Incident => Incident.type === \"Red Flag\");\r\n\tif (redFlags.length >= 1) {\r\n\t\t\tres.send({\r\n\t\t\t\t\"status\": 200,\r\n\t\t\t\t\"data\": redFlags,\r\n\t\t\t});\r\n\t} else {\r\n\t\t\tres.send({\r\n\t\t\t\t\t\"status\": 404,\r\n\t\t\t\t\t\"error\": \"No Red Flag Records Found!\",\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\n/***\r\n*\t@description  GET a specific red flag record.\r\n*\t@param {object} req - HTTP Request\r\n* @param {object} res - HTTP Response\r\n* @memberof Controller\r\n* @returns {object} Class instance\r\n***/\r\n\r\nsingleRedFlagRecord(req, res) {\r\n\tconst specificRecord = Incidents.find(Incident => Incident.id === Number(req.params.id));\r\n\tif (!specificRecord) {\r\n res.send({\r\n\t\t\"status\": 404,\r\n\t\t\"error\":\t\"Oops! No record found with this id!\",\r\n\t});\r\n\t} else {\r\n\t\tres.send({\r\n\t\t\t\"status\": 200,\r\n\t\t\t\"data\":\t[specificRecord],\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n/***\r\n*\t@description  EDIT a specific red flag record.\r\n*\t@param {object} req - HTTP Request\r\n* @param {object} res - HTTP Response\r\n* @memberof Controller\r\n* @returns {object} Class instance\r\n***/\r\n\r\nchangeComment(req, res)  {\r\n\tconst specificRecord = Incidents.find(Incident => Incident.id === Number(req.params.id));\r\n\t//Edit record's comment\r\n\tif (specificRecord) {\r\n\t\tconst { recordComment } = req.body;\r\n\t\tif (specificRecord.comment = recordComment) {\r\n\t\tres.send({\r\n\t\t\t\"status\":\t200,\r\n\t\t\t\"data\":\t[{\r\n\t\t\t\t\"id\": specificRecord.id,\r\n\t\t\t\t\"message\":\t\"Updated red-flag record's comment\",\r\n\t\t\t}]\r\n\t\t})\r\n\t} else {\r\n\t\tres.send({\r\n\t\t\t\"status\": 404,\r\n\t\t\t\"message\": \"Record not found!\",\r\n\t\t});\r\n\t}}\r\n}\r\n\r\n//Edit record's location\r\nchangeLocation (req, res){\r\n\tconst specificRecord = Incidents.find(Incident => Incident.id === Number(req.params.id));\r\n\t\r\n\tif (specificRecord) {\r\n\t\tconst { recordLocation } = req.body;\r\n\t\tif(specificRecord.location = recordLocation) {\r\n\t\t\tres.send({\r\n\t\t\t\t\"status\":\t200,\r\n\t\t\t\t\"data\":\t[{\r\n\t\t\t\t\t\"id\":\tspecificRecord.id,\r\n\t\t\t\t\t\"message\":\t\"Updated red-flag recordâ€™s location\",\r\n\t\t\t\t}]\r\n\t\t\t})\r\n\t\t}\r\n\t} else {\r\n\t\tres.send({\r\n\t\t\t\"status\":\t404,\r\n\t\t\t\"message\":\t\"Record not found\",\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n/***\r\n*\t@description  DELETE a specific red flag record.\r\n*\t@param {object} req - HTTP Request\r\n* @param {object} res - HTTP Response\r\n***/\r\n\r\n\r\n}"]}